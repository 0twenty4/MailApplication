package com.example.mailapplication;

import android.content.Context;
import android.content.res.ColorStateList;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.text.InputType;
import android.view.View;
import android.view.inputmethod.InputMethodManager;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.LinearLayout;

import java.util.ArrayList;


public class EMailMessageComposing extends AppCompatActivity {
    LinearLayout toLayout;
    int toLayoutPartEditCount;
    ArrayList<LayoutPart> toLayoutParts=new ArrayList<>();
    EditText toLayoutEnter;
    EMailService layoutPartFocusChangeListener;
    boolean modeDeleteLayoutPart;
    ColorStateList transparent;
    EditText eMailAddressEdit;


    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.email_message_composing);
        EMailService.setCurrentActivity(this, R.id.email_message_composing);
        FrameLayout fromLayout=findViewById(R.id.email_message_composing_from_layout);
        String currentUserEMailAddress=EMailService.getCurrentUserEMailAddress();
        LayoutPart fromLayoutPartChecked=new LayoutPart();
        fromLayoutPartChecked.setLayoutPartData(currentUserEMailAddress, true, true);
        int fromLayoutId=fromLayout.getId();
        getSupportFragmentManager().beginTransaction()
                .add(fromLayoutId, fromLayoutPartChecked)
                .commit();
        toLayout=findViewById(R.id.email_message_composing_to_layout);
        transparent=ColorStateList.valueOf(getColor(R.color.transparent));
        EMailService toLayoutTextChangedListener=new EMailService() {
            public void onTextChanged(CharSequence text, int start, int count, int after) {
                if (text.length() > 0) {
                    try {
                        if (needToAddLayoutPart(text)) {
                            FrameLayout toLayoutPartCheckedFrame = new FrameLayout(EMailMessageComposing.this);
                            toLayout.addView(toLayoutPartCheckedFrame);
                            toLayoutPartCheckedFrame.setId(View.generateViewId());
                            int toLayoutPartCheckedFrameId = toLayoutPartCheckedFrame.getId();
                            addToLayoutPart(toLayoutEnter, toLayoutPartCheckedFrameId);
                        }
                        toLayoutEnter.setText("");
                    } catch (Exception e) {}
                }
            }
        };
        toLayoutEnter=findViewById(R.id.email_message_composing_to_enter);
        toLayoutEnter.addTextChangedListener(toLayoutTextChangedListener);
        toLayoutEnter.setBackgroundTintList(transparent);
        EditText subject=findViewById(R.id.email_message_composing_subject);
        subject.setBackgroundTintList(transparent);
        EditText content=findViewById(R.id.email_message_composing_content);
        content.setBackgroundTintList(transparent);
        View contentLayoutClickable=findViewById(R.id.email_message_composing_content_layout_clickable);
        contentLayoutClickable.setOnClickListener(new EMailService() {
            public void onClick(View view) {
                if (!content.hasFocus()) {
                    content.requestFocus();
                    InputMethodManager keyboard=(InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
                    keyboard.showSoftInput(content, InputMethodManager.SHOW_FORCED);
                }
            }
        });
    }

    public void deleteLayoutPart(LayoutPart layoutPart) {
        View layoutPartFrame=(View) layoutPart.getView().getParent();
        toLayout.removeView(layoutPartFrame);
        toLayoutParts.remove(layoutPart);
    }

    public void setModeEditLayoutPartOn(LayoutPart layoutPart) {
        try {
            if (eMailAddressEdit == null) {
                eMailAddressEdit = new EditText(this);
                eMailAddressEdit.setTextSize(18);
                int black = getColor(R.color.black);
                eMailAddressEdit.setTextColor(black);
                eMailAddressEdit.setBackgroundTintList(transparent);
                eMailAddressEdit.setInputType(InputType.TYPE_TEXT_VARIATION_EMAIL_ADDRESS);
                eMailAddressEdit.setOnFocusChangeListener(new EMailService() {
                    public void onFocusChange(View view, boolean hasFocus) {
                        if (!hasFocus) {
                            toLayout.removeView(eMailAddressEdit);
                            FrameLayout toLayoutPartFrame = new FrameLayout(EMailMessageComposing.this);
                            toLayout.addView(toLayoutPartFrame, toLayoutPartEditCount);
                            toLayoutPartFrame.setId(View.generateViewId());
                            int toLayoutPartFrameId = toLayoutPartFrame.getId();
                            addToLayoutPart(eMailAddressEdit, toLayoutPartFrameId);
                        }
                    }
                });
                eMailAddressEdit.addTextChangedListener(new EMailService() {
                    public void onTextChanged(CharSequence text, int start, int count, int after) {
                        if (text.length() > 0) {
                            try {
                                if (needToAddLayoutPart(text)) {
                                    eMailAddressEdit.clearFocus();
                                    toLayoutEnter.requestFocus();
                                }
                            } catch (Exception e) {
                            }
                        }
                    }
                });
            }
            int toLayoutPartIndex = toLayoutParts.indexOf(layoutPart);
            toLayout.removeViewAt(toLayoutPartIndex);
            toLayout.addView(eMailAddressEdit, toLayoutPartIndex);
            eMailAddressEdit.requestFocus();
        } catch (Exception e) {
            System.out.println(e.getClass().getName());
        }
    }

    public boolean needToAddLayoutPart(CharSequence text) throws Exception {
        int charactersCount=text.length();
        char characterLast=text.charAt(charactersCount-1);
        if (characterLast==' ') {
            if (charactersCount == 1)
                return false;
            else
                return true;
        }
        throw new Exception();
    }

    public void addToLayoutPart(EditText eMailAddressEdit, int layoutPartFrameId) {
        LayoutPart layoutPart=new LayoutPart();
        String eMailAddress=eMailAddressEdit.getText().toString();
        if (EMailService.eMailAddressValid(eMailAddressEdit))
            layoutPart.setLayoutPartData(eMailAddress, true, false);
        else
            layoutPart.setLayoutPartData(eMailAddress, false,false);
        getSupportFragmentManager().beginTransaction()
                .add(layoutPartFrameId, layoutPart)
                .commit();
        toLayoutParts.add(layoutPart);
    }
}
