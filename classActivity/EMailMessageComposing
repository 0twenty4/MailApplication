package com.example.mailapplication;

import android.content.Context;
import android.content.res.ColorStateList;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.text.InputType;
import android.view.View;
import android.view.inputmethod.InputMethodManager;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import static android.widget.LinearLayout.LayoutParams.MATCH_PARENT;
import static android.widget.LinearLayout.LayoutParams.WRAP_CONTENT;

public class EMailMessageComposing extends AppCompatActivity {
    EditText toLayoutPartCurrent;

    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.email_message_composing);
        EMailService.setCurrentActivity(this, R.id.email_message_composing);
        FrameLayout fromLayout=findViewById(R.id.email_message_composing_from_layout);
        String currentUserEMailAddress=EMailService.getCurrentUserEMailAddress();
        LayoutPart fromLayoutPartChecked=new LayoutPart();
        fromLayoutPartChecked.setLayoutPartData(currentUserEMailAddress, true, true);
        int fromLayoutId=fromLayout.getId();
        getSupportFragmentManager().beginTransaction()
                .add(fromLayoutId, fromLayoutPartChecked)
                .commit();
        final LinearLayout toLayout=findViewById(R.id.email_message_composing_to_layout);
        final ColorStateList transparent=ColorStateList.valueOf(getColor(R.color.transparent));
        EMailService toLayoutTextChangedListener=new EMailService() {
            public void onTextChanged(CharSequence text, int start, int count, int after) {
                final int charactersAmount = text.length();
                if (charactersAmount > 0) {
                    int characterLast = text.charAt(charactersAmount - 1);
                    if (characterLast == ' ') {
                        if (charactersAmount == 1) {
                            toLayoutPartCurrent.setText("");
                        } else {
                            toLayout.removeView(toLayoutPartCurrent);
                            FrameLayout toLayoutPartCheckedFrame=new FrameLayout(EMailMessageComposing.this);
                            toLayoutPartCheckedFrame.setId(View.generateViewId());
                            toLayout.addView(toLayoutPartCheckedFrame);
                            View space=new View(EMailMessageComposing.this);
                            space.setLayoutParams(new LinearLayout.LayoutParams(MATCH_PARENT, 5));
                            toLayout.addView(space);
                            final String eMailAddressCurrent = text.toString();
                            final LayoutPart toLayoutPartChecked=new LayoutPart();
                            if (EMailService.eMailAddressValid(toLayoutPartCurrent))
                                toLayoutPartChecked.setLayoutPartData(eMailAddressCurrent, true, false);
                            else
                                toLayoutPartChecked.setLayoutPartData(eMailAddressCurrent, false, false);
                            final int toLayoutPartCheckedFrameId=toLayoutPartCheckedFrame.getId();
                            getSupportFragmentManager().beginTransaction()
                                    .add(toLayoutPartCheckedFrameId, toLayoutPartChecked)
                                    .commit();
                            EditText toLayoutPartNext = new EditText(EMailMessageComposing.this);
                            toLayoutPartNext.setTextSize(18);
                            int black = getColor(R.color.black);
                            toLayoutPartNext.setTextColor(black);
                            toLayoutPartNext.setBackgroundTintList(transparent);
                            toLayoutPartNext.setInputType(InputType.TYPE_TEXT_VARIATION_EMAIL_ADDRESS);
                            toLayoutPartNext.setLayoutParams(new LinearLayout.LayoutParams(MATCH_PARENT, WRAP_CONTENT));
                            toLayout.addView(toLayoutPartNext);
                            toLayout.requestFocus();
                            toLayoutPartCurrent=toLayoutPartNext;
                        }
                    }
                }
            }
        };
        EditText toLayoutPartOrigin=findViewById(R.id.email_message_composing_to_origin);
        toLayoutPartCurrent=toLayoutPartOrigin;
        toLayoutPartOrigin.addTextChangedListener(toLayoutTextChangedListener);
        toLayoutPartOrigin.setBackgroundTintList(transparent);
        EditText subject=findViewById(R.id.email_message_composing_subject);
        subject.setBackgroundTintList(transparent);
        EditText content=findViewById(R.id.email_message_composing_content);
        content.setBackgroundTintList(transparent);
        View contentLayoutClickable=findViewById(R.id.email_message_composing_content_layout_clickable);
        contentLayoutClickable.setOnClickListener(new EMailService() {
            public void onClick(View view) {
                if (!content.hasFocus()) {
                    content.requestFocus();
                    InputMethodManager keyboard=(InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
                    keyboard.showSoftInput(content, InputMethodManager.SHOW_FORCED);
                }
            }
        });
        toLayout.setOnHierarchyChangeListener(new EMailService() {
            public void onChildViewAdded(View parent, View child) {
                if (child instanceof EditText) {
                    ((EditText) child).addTextChangedListener(toLayoutTextChangedListener);
                }
            }
        });
    }
}
