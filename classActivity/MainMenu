package com.example.mailapplication;

import android.animation.Animator;
import android.animation.ValueAnimator;
import android.content.Intent;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v7.app.AppCompatActivity;
import android.view.View;
import android.view.ViewPropertyAnimator;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.ScrollView;

public class MainMenu extends AppCompatActivity {

    public void onCreate(Bundle savedInstanceState) {
        boolean hasDisplayedMessages = EMailService.hasDisplayedMessages();
        if (hasDisplayedMessages)
            overridePendingTransition(R.anim.slide_from_left_to_middle, R.anim.slide_from_middle_to_right);
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main_menu);
        EMailService.setCurrentActivity(this, R.id.main_menu_loading_layout);
        View mainMenuClickLayout=findViewById(R.id.main_menu_root_click_layout);
        mainMenuClickLayout.bringToFront();
        mainMenuClickLayout.setOnClickListener(new EMailService() {
            public void onClick(View view) {
                setModeMainMenuConfirmingDeletingOff();
            }
        });
        View mainMenuConfirmingDeletingLayout=findViewById(R.id.main_menu_confirming_deleting_layout);
        mainMenuConfirmingDeletingLayout.bringToFront();
        ScrollView mainMenuScroll = findViewById(R.id.main_menu_scroll);
        int currentScrollY = EMailService.getCurrentMainMenuScrollY();
        mainMenuScroll.post((Runnable) () -> {
            mainMenuScroll.scrollTo(0, currentScrollY);
        });
        int eMailMessagesLayout = R.id.main_menu_email_messages_layout;
        Fragment mainMenuShowMoreFragment = new ShowMoreMainMenu();
        FrameLayout mainMenuShowMoreLayout=findViewById(R.id.main_menu_show_more_layout);
        mainMenuShowMoreLayout.bringToFront();
        int showMoreLayoutId = R.id.main_menu_show_more_layout;
        ImageView mainMenuShowMore = findViewById(R.id.main_menu_show_more);
        mainMenuShowMore.setOnClickListener(new EMailService() {
            boolean mainMenuShowMoreShown;

            public void onClick(View view) {
                mainMenuShowMore.setClickable(false);
                if (!mainMenuShowMoreShown) {
                    mainMenuShowMoreShown = true;
                    getSupportFragmentManager().beginTransaction()
                            .add(showMoreLayoutId, mainMenuShowMoreFragment, "main menu show more")
                            .commit();
                } else {
                    mainMenuShowMoreShown=false;
                    getSupportFragmentManager().beginTransaction()
                            .remove(mainMenuShowMoreFragment)
                            .commit();
                }
            }
        });
        ImageView mainMenuTick=findViewById(R.id.main_menu_tick);
        mainMenuTick.setOnClickListener(new EMailService() {
            public void onClick(View view) {
                boolean eMailMessagesDisplayedTicked=EMailService.getAreEMailMessagesDisplayedTicked();
                if (!eMailMessagesDisplayedTicked)
                    EMailService.setEMailMessagesDisplayedTicked(true);
                else
                    EMailService.setEMailMessagesDisplayedTicked(false);
            }
        });
        findViewById(R.id.main_menu_shadow).bringToFront();
        ImageView mainMenuDelete=findViewById(R.id.main_menu_delete);
        mainMenuDelete.setOnClickListener(new EMailService() {
            public void onClick(View view) {
                int eMailMessagesDisplayedTickedAmount=getEMailMessagesDisplayedTickedAmount();
                if (eMailMessagesDisplayedTickedAmount>0)
                    EMailService.setModeMainMenuConfirmingDeletingOn(null);
            }
        });
        ImageView mainMenuCompose=findViewById(R.id.main_menu_compose);
        mainMenuCompose.setOnClickListener(new EMailService() {
            final ValueAnimator mainMenuValueComposeAnimator=ValueAnimator.ofFloat().setDuration(100);
            final ViewPropertyAnimator mainMenuComposePropertyAnimator=mainMenuCompose.animate().setDuration(100);

            public void onClick(View view) {
                mainMenuValueComposeAnimator.setFloatValues(10, 0);
                mainMenuValueComposeAnimator.addUpdateListener(new EMailService() {
                    public void onAnimationUpdate(ValueAnimator animator) {
                        mainMenuCompose.setElevation((float) animator.getAnimatedValue());
                    }
                });
                mainMenuValueComposeAnimator.addListener(new EMailService() {
                    public void onAnimationEnd(Animator animator) {
                        mainMenuValueComposeAnimator.setFloatValues(0, 10);
                        mainMenuValueComposeAnimator.removeAllListeners();
                        mainMenuValueComposeAnimator.addListener(new EMailService() {
                            public void onAnimationEnd(Animator animator) {
                                Intent intent=new Intent(MainMenu.this, EMailMessageComposing.class);
                                MainMenu.this.startActivity(intent);
                            }
                        });
                        mainMenuComposePropertyAnimator
                                .scaleX(1)
                                .scaleY(1)
                                .start();
                        mainMenuValueComposeAnimator.start();
                    }
                });
                mainMenuComposePropertyAnimator
                        .scaleX(0.95f)
                        .scaleY(0.95f)
                        .start();
                mainMenuValueComposeAnimator.start();
            }
        });
        mainMenuCompose.bringToFront();
        EMailService.displayMessages(eMailMessagesLayout);
    }

    public void onBackPressed() {
        boolean modeConfirmingDeletingOn=EMailService.getModeMainMenuConfirmingDeleting();
        if (modeConfirmingDeletingOn)
            EMailService.setModeMainMenuConfirmingDeletingOff();
        else {
            boolean modeDeletingOn = EMailService.getModeMainMenuDeleting();
            if (modeDeletingOn)
                EMailService.setModeMainMenuDeleting(false);
            else
                super.onBackPressed();
        }
    }
}



