package com.example.mailapplication;

import android.animation.ValueAnimator;
import android.content.Intent;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v7.app.AppCompatActivity;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.ScrollView;
import android.widget.TextView;
import static android.view.View.VISIBLE;
import static android.view.View.GONE;

import javax.mail.Message;

public class EMailMessage extends Fragment {
    Message message;
    String[] from;
    String subject;
    String sentDate;
    boolean ticked;

    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        return inflater.inflate(R.layout.email_message, container, false);
    }

    public void onActivityCreated(Bundle savedInstanceState) {
        super.onActivityCreated(savedInstanceState);
        boolean mainMenuDeletingModeOn=EMailService.getMainMenuDeletingMode();
        if (mainMenuDeletingModeOn) {
            ImageView eMailMessageDelete=getView().findViewById(R.id.email_message_delete);
            eMailMessageDelete.setVisibility(VISIBLE);
        }
        final AppCompatActivity mainMenu = EMailService.getCurrentActivity();
        TextView eMailMessageFrom = getView().findViewById(R.id.from);
        TextView eMailMessageSubject = getView().findViewById(R.id.subject);
        TextView eMailMessageSentDate = getView().findViewById(R.id.sent_date);
        eMailMessageFrom.setText(from[0]);
        eMailMessageSubject.setText(subject);
        eMailMessageSentDate.setText(sentDate);
        View eMailMessageView=getView();
        eMailMessageView.setOnClickListener(new EMailService() {
            public void onClick(View view) {
                boolean mainMenuDeletingModeOn=EMailService.getMainMenuDeletingMode();
                if (mainMenuDeletingModeOn) {
                    ValueAnimator eMailMessageViewAnimator;
                    ImageView eMailMessageTick = getView().findViewById(R.id.email_message_tick);
                    int grey = mainMenu.getColor(R.color.bright_grey);
                    int white=mainMenu.getColor(R.color.white);
                    if (!ticked) {
                        ticked = true;
                        eMailMessageTick.setVisibility(VISIBLE);
                        eMailMessageViewAnimator = ValueAnimator.ofArgb(white, grey);
                    } else {
                        ticked=false;
                        eMailMessageTick.setVisibility(GONE);
                        eMailMessageViewAnimator=ValueAnimator.ofArgb(grey, white);
                    }
                    eMailMessageViewAnimator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
                        public void onAnimationUpdate(ValueAnimator animator) {
                            eMailMessageView.setBackgroundColor((int) animator.getAnimatedValue());
                        }
                    });
                    eMailMessageViewAnimator.setDuration(300);
                    eMailMessageViewAnimator.start();

                } else {
                    EMailService.setCurrentEMailMessage(EMailMessage.this);
                    AppCompatActivity mainMenu =EMailService.getCurrentActivity();
                    Intent intent = new Intent(mainMenu, EMailMessageOpen.class);
                    ScrollView mainMenuScroll = mainMenu.findViewById(R.id.main_menu_scroll);
                    int currentMainMenuScrollY = mainMenuScroll.getScrollY();
                    EMailService.setCurrentMainMenuScrollY(currentMainMenuScrollY);
                    mainMenu.startActivity(intent);
                }
            }
        });
        eMailMessageView.setOnLongClickListener(new EMailService() {
            public boolean onLongClick(View view) {
                boolean mainMenuDeletingModeOn = EMailService.getMainMenuDeletingMode();
                if (!mainMenuDeletingModeOn) {
                    ticked=true;
                    ImageView eMailMessageTick=getView().findViewById(R.id.email_message_tick);
                    eMailMessageTick.setVisibility(VISIBLE);
                    EMailService.setMainMenuDeletingMode(true);
                    int grey = EMailService.getCurrentActivity().getColor(R.color.bright_grey);
                    ValueAnimator eMailMessageViewAnimator = ValueAnimator.ofArgb(grey);
                    eMailMessageViewAnimator.addUpdateListener(new EMailService() {
                        public void onAnimationUpdate(ValueAnimator animator) {
                            eMailMessageView.setBackgroundColor((int) animator.getAnimatedValue());
                        }
                    });
                    eMailMessageViewAnimator.setDuration(300);
                    eMailMessageViewAnimator.start();
                } else
                    onClick(eMailMessageView);
                return true;
            }
        });
        ImageView eMailMessageDelete=getView().findViewById(R.id.email_message_delete);
        eMailMessageDelete.setOnClickListener(new EMailService() {
            public void onClick(View view) {
                int mainMenuConfirmingDeletingLayoutId=R.id.main_menu_confirming_deleting_layout;
                Fragment confirmingDeleting=new ConfirmingDeleting();
                FrameLayout mainMenuConfirmingDeletingLayout=mainMenu.findViewById(mainMenuConfirmingDeletingLayoutId);
                mainMenuConfirmingDeletingLayout.bringToFront();
                mainMenu.getSupportFragmentManager().beginTransaction()
                        .add(mainMenuConfirmingDeletingLayoutId, confirmingDeleting)
                        .commit();
            }
        });
    }

    public void setData(Message message, String[] from, String subject, String sentDate) {
        this.message=message;
        this.from=from;
        this.subject=subject;
        this.sentDate=sentDate;
    }
}
