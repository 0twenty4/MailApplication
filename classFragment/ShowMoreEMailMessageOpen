package com.example.mailapplication;

import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v7.app.AppCompatActivity;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.animation.Animation;
import android.view.animation.AnimationUtils;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import static android.view.View.GONE;

import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;

public class ShowMoreEMailMessageOpen extends Fragment {
    HashMap<String, String> fromAndFromEMailAddressMore;


    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        return inflater.inflate(R.layout.email_message_open_show_more, container, false);
    }

    public void onActivityCreated(Bundle savedInstanceState) {
        super.onActivityCreated(savedInstanceState);
        AppCompatActivity currentActivity=EMailService.getCurrentActivity();
        int showMoreLoadingLayout = R.id.show_more_loading_layout;
        Fragment loading = new LoadingProgressBarCircle();
        getChildFragmentManager().beginTransaction()
                .add(showMoreLoadingLayout, loading)
                .commit();
        int blue=currentActivity.getColor(R.color.main_color);
        LinearLayout showMoreLayout =getView().findViewById(R.id.show_more_layout);
        Iterator<Map.Entry<String, String>> fromAndFromEMailAddressMoreIterator = fromAndFromEMailAddressMore.entrySet().iterator();
        while (fromAndFromEMailAddressMoreIterator.hasNext()) {
            Map.Entry<String, String> fromAndFromEMailAddressMore = fromAndFromEMailAddressMoreIterator.next();
            String fromMoreText = fromAndFromEMailAddressMore.getValue();
            TextView fromMore=new TextView(currentActivity);
            fromMore.setText(fromMoreText);
            fromMore.setTextSize(25);
            fromMore.setTextColor(blue);
            showMoreLayout.addView(fromMore);
            String fromEMailAddressMoreText = fromAndFromEMailAddressMore.getKey();
            TextView fromEMailAddressMore=new TextView(currentActivity);
            fromEMailAddressMore.setText(fromEMailAddressMoreText);
            fromEMailAddressMore.setTextSize(15);
            showMoreLayout.addView(fromEMailAddressMore);
        }
        getChildFragmentManager().beginTransaction()
                .remove(loading)
                .commit();
    }

    public Animation onCreateAnimation(int transit, boolean enter, int nextAnim) {
        AppCompatActivity currentActivity=EMailService.getCurrentActivity();
        final int animationId;
        if (enter) {
            animationId = R.anim.slide_from_top_to_bottom;
        } else {
            animationId=R.anim.slide_from_bottom_to_top;
        }
        final Animation animation= AnimationUtils.loadAnimation(currentActivity, animationId);
        animation.setAnimationListener(new EMailService() {
            final ScrollView currentEMailMessageShowMoreLayout=currentActivity.findViewById(R.id.email_message_open_show_more_layout);
            final ImageView showMoreImage=currentActivity.findViewById(R.id.email_message_open_show_more);
            public void onAnimationEnd(Animation animation) {
                if (!enter)
                    currentEMailMessageShowMoreLayout.setVisibility(GONE);
                showMoreImage.setClickable(true);
            }
        });
        return animation;
    }

    public void setData(HashMap<String, String> fromAndFromEMailAddressMore) {
        this.fromAndFromEMailAddressMore = fromAndFromEMailAddressMore;
    }
}
